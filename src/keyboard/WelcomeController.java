/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package keyboard;

/**
 *
 * @author Yorick
 */
public class WelcomeController {
    //https://www.musicaneo.com/sheetmusic/sm-120345_row_row_row_your_boat.html
    public void playBoat(){
        final boolean IS_START = true;
        final boolean IS_STOP = false;
        final long GAP = 25;
        final long CROTCHET = 600 - GAP;
        final long MINIM = 1200 - GAP;
        final long QUAVER = 300 - GAP;
        final int OCTAVE = 4;
        
        long time = 0;
        RecordedPlaybackModel boat = new RecordedPlaybackModel();
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE+1, IS_START);
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE-1, IS_START);
        time += CROTCHET;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE+1, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE+1, IS_START);
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE+1, IS_STOP);
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE-1, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_START);
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE-1, IS_START);
        time += CROTCHET;
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_START);
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE-1, IS_STOP);
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_START);
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE-1, IS_START);
        time += CROTCHET;
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_START);
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_STOP);
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE-1, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_START);
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE-1, IS_START);
        time += CROTCHET;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_START);
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE-1, IS_STOP);
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_START);
        boat.addNote(KeyboardModel.Note.B, time, OCTAVE-1, IS_START);
        boat.addNote(KeyboardModel.Note.F, time, OCTAVE-1, IS_START);
        time += CROTCHET;
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_STOP);
        boat.addNote(KeyboardModel.Note.B, time, OCTAVE-1, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.F, time, OCTAVE, IS_START);
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.F, time, OCTAVE-1, IS_STOP);
        boat.addNote(KeyboardModel.Note.F, time, OCTAVE, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_START);
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE-1, IS_START);
        time += CROTCHET;
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_STOP);
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE-1, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_START);
        boat.addNote(KeyboardModel.Note.F, time, OCTAVE-1, IS_START);
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        boat.addNote(KeyboardModel.Note.F, time, OCTAVE-1, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_START);
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE-1, IS_START);
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE-1, IS_START);
        time += MINIM;
        time += GAP;
        time += CROTCHET;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_STOP);
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE-1, IS_STOP);
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE-1, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_START);
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE-1, IS_START);
        time += CROTCHET;
        time += GAP;
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_STOP);
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE-1, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_START);
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE-1, IS_START);
        time += CROTCHET;
        time += GAP;
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_STOP);
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE-1, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_START);
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE-1, IS_START);
        time += CROTCHET;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_START);
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE-1, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_START);
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE-1, IS_START);
        time += CROTCHET;
        time += GAP;
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_STOP);
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE-1, IS_STOP);
        time += GAP;        
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_START);
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE-1, IS_START);
        time += CROTCHET;
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_START);
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE-1, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_START);
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE-1, IS_START);
        time += CROTCHET;
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.F, time, OCTAVE, IS_START);
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.F, time, OCTAVE, IS_STOP);
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE-1, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_START);
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE-1, IS_START);
        time += CROTCHET;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE-1, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.D, time, OCTAVE-1, IS_START);
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.D, time, OCTAVE-1, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE-1, IS_START);
        time += CROTCHET;
        time += GAP;
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_STOP);
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE-1, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE+1, IS_START);
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE-1, IS_START);
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE-1, IS_START);
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE+1, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE+1, IS_START);
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE+1, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE+1, IS_START);
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE+1, IS_STOP);
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE-1, IS_STOP);
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE-1, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_START);
        boat.addNote(KeyboardModel.Note.F, time, OCTAVE-1, IS_START);
        boat.addNote(KeyboardModel.Note.B, time, OCTAVE-2, IS_START);
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_START);
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_START);
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_STOP);
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE-1, IS_STOP);
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE-1, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_START);
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE-1, IS_START);
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE-1, IS_START);
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_START);
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_START);
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_STOP);
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE-1, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_START);
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE-1, IS_START);
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_START);
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_START);
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_STOP);
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE-1, IS_STOP);
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE-1, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_START);
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_START);
        time += CROTCHET;
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.F, time, OCTAVE, IS_START);
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.F, time, OCTAVE, IS_START);
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_START);
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE-1, IS_START);
        time += CROTCHET;
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_START);
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        boat.addNote(KeyboardModel.Note.G, time, OCTAVE-1, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_START);
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE-1, IS_START);
        time += CROTCHET;
        time += GAP;
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.E, time, OCTAVE-1, IS_STOP);
        time += GAP;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE-1, IS_START);
        time += CROTCHET;
        time += GAP;
        time += QUAVER;
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_START);
        boat.addNote(KeyboardModel.Note.C, time, OCTAVE-1, IS_START);
    }
    //https://makingmusicfun.net/pdf/sheet_music/happy-birthday-easy-piano.pdf
    public void playBirthday(){
        final boolean IS_START = true;
        final boolean IS_STOP = false;
        final long GAP = 25;
        final long CROTCHET = 1000 - GAP;
        final long MINIM = 2000 - GAP;
        final long QUAVER = 500 - GAP;
        final int OCTAVE = 4;
        
        long time = 0;
        RecordedPlaybackModel birthday = new RecordedPlaybackModel();
        birthday.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_START);
        time += QUAVER;
        birthday.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        time += GAP;
        birthday.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_START);
        time += CROTCHET;
        birthday.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_STOP);
        time += GAP;
        birthday.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_START);
        time += CROTCHET;
        birthday.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        time += GAP;
        birthday.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_START);
        time += CROTCHET;
        birthday.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_STOP);
        time += GAP;
        birthday.addNote(KeyboardModel.Note.Fsharp, time, OCTAVE, IS_START);
        time += CROTCHET;
        time += GAP;
        birthday.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_START);
        birthday.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_START);
        time += CROTCHET;
        birthday.addNote(KeyboardModel.Note.Fsharp, time, OCTAVE, IS_STOP);
        birthday.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        birthday.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_STOP);
        time += GAP;
        birthday.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_START);
        time += QUAVER;
        birthday.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        time += GAP;
        birthday.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_START);
        time += QUAVER;
        birthday.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        time += GAP;
        birthday.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_START);
        time += CROTCHET;
        birthday.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_STOP);
        time += GAP;
        birthday.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_START);
        time += CROTCHET;
        birthday.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        time += GAP;
        birthday.addNote(KeyboardModel.Note.A, time, OCTAVE, IS_START);
        time += CROTCHET;
        birthday.addNote(KeyboardModel.Note.A, time, OCTAVE, IS_STOP);
        time += GAP;
        birthday.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_START);
        time += CROTCHET;
        time += GAP;
        birthday.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_START);
        birthday.addNote(KeyboardModel.Note.B, time, OCTAVE-1, IS_START);
        time += CROTCHET;
        birthday.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_STOP);
        birthday.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        birthday.addNote(KeyboardModel.Note.B, time, OCTAVE-1, IS_STOP);
        time += GAP;
        birthday.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_START);
        time += QUAVER;
        birthday.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        time += GAP;
        birthday.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_START);
        time += QUAVER;
        birthday.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        time += GAP;
        birthday.addNote(KeyboardModel.Note.D, time, OCTAVE+1, IS_START);
        time += CROTCHET;
        birthday.addNote(KeyboardModel.Note.D, time, OCTAVE+1, IS_STOP);
        time += GAP;
        birthday.addNote(KeyboardModel.Note.B, time, OCTAVE, IS_START);
        birthday.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        time += CROTCHET;
        birthday.addNote(KeyboardModel.Note.B, time, OCTAVE, IS_START);
        time += GAP;
        birthday.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_START);
        time += CROTCHET;
        birthday.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_START);
        birthday.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        time += GAP;
        birthday.addNote(KeyboardModel.Note.F, time, OCTAVE, IS_START);
        birthday.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_START);
        time += CROTCHET;
        birthday.addNote(KeyboardModel.Note.F, time, OCTAVE, IS_STOP);
        time += GAP;
        birthday.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_START);
        time += CROTCHET;
        birthday.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_STOP);
        birthday.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_STOP);
        time += GAP;
        birthday.addNote(KeyboardModel.Note.C, time, OCTAVE+1, IS_START);
        time += QUAVER;
        birthday.addNote(KeyboardModel.Note.C, time, OCTAVE+1, IS_STOP);
        time += GAP;
        birthday.addNote(KeyboardModel.Note.C, time, OCTAVE+1, IS_START);
        time += QUAVER;
        birthday.addNote(KeyboardModel.Note.C, time, OCTAVE+1, IS_STOP);
        time += GAP;
        birthday.addNote(KeyboardModel.Note.B, time, OCTAVE, IS_START);
        time += CROTCHET;
        birthday.addNote(KeyboardModel.Note.B, time, OCTAVE, IS_STOP);
        time += GAP;
        birthday.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_START);
        time += CROTCHET;
        birthday.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_STOP);
        time += GAP;
        birthday.addNote(KeyboardModel.Note.A, time, OCTAVE, IS_START);
        time += CROTCHET;
        birthday.addNote(KeyboardModel.Note.A, time, OCTAVE, IS_STOP);
        time += GAP;
        birthday.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_START);
        time += CROTCHET;
        time += GAP;
        birthday.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_START);
        birthday.addNote(KeyboardModel.Note.B, time, OCTAVE-1, IS_START);
        time += CROTCHET;
        birthday.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_STOP);
        birthday.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        birthday.addNote(KeyboardModel.Note.B, time, OCTAVE-1, IS_STOP);
    }
    //https://www.music-for-music-teachers.com/mary-had-a-little-lamb.html
    public void playMary(){
        final boolean IS_START = true;
        final boolean IS_STOP = false;
        final long GAP = 25;
        final long WHOLE = 1920 - GAP;
        final long MINIM = 960 - GAP;
        final long CROTCHET = 480 - GAP;
        final long QUAVER = 240 - GAP;
        final int OCTAVE = 4;
        
        long time = 0;
        RecordedPlaybackModel mary = new RecordedPlaybackModel();
        mary.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_START);
        time += CROTCHET;
        mary.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_START);
        time += CROTCHET;
        mary.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_START);
        time += CROTCHET;
        mary.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_START);
        time += CROTCHET;
        mary.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_START);
        time += CROTCHET;
        mary.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_START);
        time += CROTCHET;
        mary.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_START);
        time += MINIM;
        mary.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_START);
        time += CROTCHET;
        mary.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_START);
        time += CROTCHET;
        mary.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_START);
        time += MINIM;
        mary.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_START);
        time += CROTCHET;
        mary.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_START);
        time += CROTCHET;
        mary.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_START);
        time += MINIM;
        mary.addNote(KeyboardModel.Note.G, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_START);
        time += CROTCHET;
        mary.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_START);
        time += CROTCHET;
        mary.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_START);
        time += CROTCHET;
        mary.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_START);
        time += CROTCHET;
        mary.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_START);
        time += CROTCHET;
        mary.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_START);
        time += CROTCHET;
        mary.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_START);
        time += CROTCHET;
        mary.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_START);
        time += CROTCHET;
        mary.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_START);
        time += CROTCHET;
        mary.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_START);
        time += CROTCHET;
        mary.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_START);
        time += CROTCHET;
        mary.addNote(KeyboardModel.Note.E, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_START);
        time += CROTCHET;
        mary.addNote(KeyboardModel.Note.D, time, OCTAVE, IS_STOP);
        time += GAP;
        mary.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_START);
        time += WHOLE;
        mary.addNote(KeyboardModel.Note.C, time, OCTAVE, IS_STOP);
    }
    
}
